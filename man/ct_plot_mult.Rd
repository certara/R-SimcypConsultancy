% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ct_plot_mult.R
\name{ct_plot_mult}
\alias{ct_plot_mult}
\title{Make graphs for multiple Simulator output files at once}
\usage{
ct_plot_mult(
  ct_dataframe,
  single_out_file = TRUE,
  figure_type = "percentiles",
  mean_type = "arithmetic",
  linear_or_log = "semi-log",
  time_range = NA,
  x_axis_interval = NA,
  pad_x_axis = TRUE,
  pad_y_axis = TRUE,
  y_axis_limits_lin = NA,
  y_axis_limits_log = NA,
  legend_position = "none",
  legend_label = NA,
  include_title = FALSE,
  file_labels = NA,
  nrow = NULL,
  ncol = NULL,
  graph_labels = TRUE,
  save_graph = NA,
  fig_height = 8,
  fig_width = 8,
  ...
)
}
\arguments{
\item{ct_dataframe}{the data.frame with multiple sets of concentration-time
data}

\item{single_out_file}{TRUE (default) or FALSE for whether to make multiple
output files. TRUE means that there will be a single file with all of the
graphs nicely arranged together. FALSE means that each Simulator output
file will have its own output file, and that graph's output file will be
named to match the Simulator output file name.}

\item{figure_type}{type of figure to plot. Options are:

  \describe{

  \item{"trial means"}{plots an opaque line for the mean data, lighter lines
  for the mean of each trial of simulated data, and open circles for the
  observed data. If an effector were present, lighter dashed lines indicate
  the mean of each trial of simulated data in the presence of the effector.}

  \item{"percentiles"}{(default) plots an opaque line for the mean data,
  lighter lines for the 5th and 95th percentiles of the simulated data, and
  open circles for the observed data. If an effecter were present, the
  default is dashed lines for the data in the presence of an effector.}

  \item{"percentile ribbon"}{plots an opaque line for the mean data,
  transparent shading for the 5th to 95th percentiles of the simulated data,
  and open circles for the observed data. If an effector were present, the
  default is to show the data without the effector in blue and the data in
  the presence of the effector in red. Note: You may sometimes see some
  artifacts -- especially for semi-log plots -- where the ribbon gets partly
  cut off. For arcane reasons we don't want to bore you with here, we can't
  easily prevent this. However, a possible fix is to set your y axis limits
  for the semi-log plot to be wider using \code{y_axis_limits_log}.}

  \item{"means only"}{plots a black line for the mean data and, if an
  effector was modeled, a dashed line for the concentration-time data with
  Inhibitor 1.}

  \item{"Freddy"}{Freddy's favorite style of plot with trial means in light
  gray, the overall mean in thicker black, the 5th and 95th percentiles in
  dashed lines, and the observed data in semi-transparent purple-blue. Graphs
  with an effector present lose the trial means, and the percentiles switch
  to solid, gray lines. \strong{An editorial comment:} While this does not
  align with the officially sanctioned template at this time, this looks
  \emph{sharp}, makes it easy to see the defining characteristics of the
  data, and I recommend checking it out, even just for your own purposes of
  examining your data. If the color is too much for you but you like the
  rest, try setting \code{obs_color = "none"}. -LS}}}

\item{mean_type}{graph "arithmetic" (default) or "geometric" means or
"median" for median concentrations}

\item{linear_or_log}{the type of graph to be returned. Options: "semi-log"
(default), "linear", "both vertical" (graphs are stacked vertically), or
"both horizontal" (graphs are side by side).}

\item{time_range}{time range to show relative to the start of the simulation.
  Options: \describe{

  \item{NA}{(default) entire time range of data}

  \item{a start time and end time in hours}{only data in that time range,
  e.g. \code{c(24, 48)}. Note that there are no quotes around numeric data.}

  \item{"first dose"}{only the time range of the first dose}

  \item{"last dose"}{only the time range of the last dose}

  \item{"penultimate dose"}{only the time range of the 2nd-to-last dose,
  which can be useful for BID data where the end of the simulation extended
  past the dosing interval or data when the substrate was dosed BID and the
  effector was dosed QD}

  \item{a specific dose number with "dose" or "doses" as the prefix}{the time
  range encompassing the requested doses, e.g., \code{time_range = "dose 3"}
  for the 3rd dose or \code{time_range = "doses 1 to 4"} for doses 1 to 4}

  \item{"all obs" or "all observed" if you feel like spelling it out}{Time
  range will be limited to only times when observed data are present.}

  \item{"last dose to last observed" or "last obs" for short}{Time range will
  be limited to the start of the last dose until the last observed data
  point.}


  }}

\item{x_axis_interval}{optionally set the x-axis major tick-mark interval.
Acceptable input: any number or leave as NA to accept default values, which
are generally reasonable guesses as to aesthetically pleasing and
PK-relevant intervals.}

\item{pad_x_axis}{optionally add a smidge of padding to the the x axis
(default is TRUE, which includes some generally reasonable padding). If
changed to FALSE, the y axis will be placed right at the beginning of your
time range and all data will end \emph{exactly} at the end of the time
range specified. If you want a \emph{specific} amount of x-axis padding,
set this to a number; the default is \code{c(0.02, 0.04)}, which adds 2\%
more space to the left side and 4\% more to the right side of the x axis.
If you only specify one number, we'll assume that's the percent you want
added to the left side.}

\item{pad_y_axis}{optionally add a smidge of padding to the y axis (default
is TRUE, which includes some generally reasonable padding). As with
\code{pad_x_axis}, if changed to FALSE, the x axis will be placed right at
the bottom of your data, possible cutting a point in half. If you want a
\emph{specific} amount of y-axis padding, set this to a number; the default
is \code{c(0.02, 0)}, which adds 2\% more space to the bottom and nothing
to the top of the y axis. If you only specify one number, we'll assume
that's the percent you want added to the bottom.}

\item{y_axis_limits_lin}{optionally set the Y axis limits for the linear
plot, e.g., \code{c(10, 1000)}. If left as the default NA, the Y axis
limits for the linear plot will be automatically selected.}

\item{y_axis_limits_log}{optionally set the Y axis limits for the semi-log
plot, e.g., \code{c(10, 1000)}. Values will be rounded down and up,
respectively, to a round number. If left as the default NA, the Y axis
limits for the semi-log plot will be automatically selected.}

\item{legend_position}{Specify where you want the legend to be. Options are
"left", "right", "bottom", "top", or "none" (default) if you don't want one
at all. If you include the legend but then some graphs do have a legend and
some graphs do not (e.g., some have effectors and some do not so there's
nothing to put in a legend), the alignment between sets of graphs will be a
bit off.}

\item{legend_label}{optionally indicate on the legend whether the effector is
an inhibitor, inducer, activator, or suppressor. Input will be used as the
label in the legend for the line style and the shape. If left as the
default NA when a legend is included and an effector is present, the label
in the legend will be "Inhibitor".}

\item{include_title}{TRUE or FALSE (default) on whether to include a title
for each small graph.}

\item{file_labels}{optionally specify a label to be used for the file name in
the graphs (this applies when \code{include_title = TRUE}) and/or specify
the order in which the files are graphed with a named character vector of
the files in the order you would like. (Not applicable if
\code{single_out_file = FALSE}.) The file name must \emph{perfectly} match
the file name listed in ct_dataframe or it won't be used. An example of how
this might be specified: \code{alt_title = c("My file 1.xlsx" = "Healthy
volunteers", "My file 2.xlsx" = "Mild hepatic impairment")}  If you get an
order that you didn't think you specified, please double check that you
have specified the file names \emph{exactly} as they appear in
\code{ct_dataframe}.}

\item{nrow}{number of rows of small graphs in the arrangement. If left as NA,
a reasonable guess will be made. (Not applicable if \code{single_out_file =
FALSE}.)}

\item{ncol}{number of columns of small graphs in the arrangement. If left as
NA, a reasonable guess will be made. (Not applicable if
\code{single_out_file = FALSE}.)}

\item{graph_labels}{TRUE or FALSE for whether to include labels (A, B, C,
etc.) for each of the small graphs. (Not applicable if
\code{single_out_file = FALSE}.)}

\item{save_graph}{optionally save the output graph by supplying a file name
in quotes here, e.g., "My conc time graph.png". If you leave off ".png", it
will be saved as a png file, but if you specify a different file extension,
it will be saved as that file format. Acceptable extensions are "eps",
"ps", "jpeg", "jpg", "tiff", "png", "bmp", or "svg". Leaving this as NA
means the file will not be automatically saved to disk. (Not applicable if
\code{single_out_file = FALSE} because each graph will be named according
to its Simulator output file.)}

\item{fig_height}{figure height in inches; default is 8}

\item{fig_width}{figure width in inches; default is 8}

\item{...}{arguments that pass through to \code{\link{ct_plot}}}
}
\value{

}
\description{
This function was designed for making nicely arranged concentration-time
graphs from several Simcyp Simulator output files all together \emph{or} for
making multiple files -- one for each Simulator file -- all at once.
}
\details{
\strong{A note on the order of the graphs:} This function arranges graphs
first by file, then by compound ID, and then by tissue, and all sorting is
alphabetical. However, since sorting alphabetically might not be the optimal
graph arrangement for your scenario, you \emph{can} specify the order of the
graphs using either the \code{file_labels} argument or, if you're comfortable
with setting factors in R, by making any of File, CompoundID, Tissue, and
subsection_ADAM factor rather than character data and setting the levels how
you wish. If you're unfamiliar with setting factor levels in R and setting
\code{file_labels} isn't achieving what you want, please ask a member of the
R Working Group for assistance.
}
\examples{

data(MDZct)
ct_plot_mult(ct_dataframe = MDZct)

ct_plot_mult(ct_dataframe = MDZct, include_title = TRUE)

ct_plot_mult(ct_dataframe = MDZct, include_title = TRUE,
   file_labels = c("mdz-5mg-sd-fa1.xlsx" = "fa = 1",
                   "mdz-5mg-sd-fa0_8.xlsx" = "fa = 0.8",
                   "mdz-5mg-sd-fa0_6.xlsx" = "fa = 0.6",
                   "mdz-5mg-sd-fa0_4.xlsx" = "fa = 0.4"))

}
