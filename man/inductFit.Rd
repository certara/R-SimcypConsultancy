% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inductFit.R
\name{inductFit}
\alias{inductFit}
\title{Fit induction data to calculate IndC50, Indmax, and/or slope}
\usage{
inductFit(
  DF,
  conc_column = Concentration_uM,
  fold_change_column = FoldInduction,
  model = "IndmaxSlope",
  measurement = "mRNA",
  donor = DONOR,
  fitByDonor = FALSE
)
}
\arguments{
\item{DF}{the data.frame containing induction data with a column for the drug
concentration, a column for the fold induction observed, and, if you want
to fit the data by individual, a column for the donor ID. For an example,
please see \code{data(IndData)}.}

\item{conc_column}{the name of the column within DF that contains
concentration data. This should be unquoted.}

\item{fold_change_column}{the name of the column within DF that contains
fold-change data, e.g., mRNA measurements or activity.}

\item{model}{which model(s) you would like to use. (Pay attention to
  capitalization when specifying the one you want.) The four model options
  are: \describe{

  \item{Indmax}{the Indmax model. This assumes a hyperbolic shape to the
  interaction when inducer concentration is plotted on the x axis and fold
  induction is plotted on the y. \deqn{Ind = (Indmax * I)/(IndC50 + I)} where
  Ind = the y axis observed fold induction, I is the inducer concentration,
  and Indmax (the maximum induction), and IndC50 (the inducer concentration
  at 1/2 Indmax) are the fitted parameters.}

  \item{IndmaxSlope}{the Indmax model with the addition of a slope n
  \deqn{fold induction = 1 + Indmax * I^n / (IndC50^n + I^n)}}

  \item{Slope}{slope only: \deqn{fold induction = I * n}}

  \item{Sig3Param}{Sigmoidal 3-parameter model (often used by Xenotech):
  \deqn{fold induction = Indmax / (1 + exp( -(I - IndC50)/n ))}}

  \item{all}{All 4 models will be fitted to the data.} }}

\item{measurement}{the type of measurement used. Options are "mRNA" or
"activity". This only affects the y axis labels on the output graph(s).}

\item{donor}{the name of the column within DF that contains the donor IDs}

\item{fitByDonor}{TRUE or FALSE: Do you want to fit the data by individual
donor (TRUE) or in aggregate (FALSE)?}
}
\value{
Returns a list of \describe{ \item{Fit}{the fitted parameters}
  \item{Fit_means}{the mean fitted parameters for all donors} \item{Graph}{a
  graph or set of graphs of the data with the fitted parameters depicted as
  lines} \item{Curve}{a data.frame of numeric data used to graph the fitted
  parameters in case you'd like to plot the fitted parameters in some other
  way}}
}
\description{
\code{inductFit} is an adaptation of Howie's script
"Induction_fit_script_ver2.r" and fits induction data -- either activity or
mRNA -- to one or all of four models for calculating Ind_max, Ind50, and,
when appropriate, a slope. Like the original script, weighting is by 1/y^2.
One way in which this differs from the original script is that no upper or
lower bounds for parameter estimates are in use. This means that, if
sufficient data to describe the curve do not exist, the function will fail to
deliver any fitted parameters, which is meant to be a benefit but could be an
annoyance depending on your perspective.
}
\examples{
data(IndData)

inductFit(IndData, model = "Indmax")$Graph
inductFit(IndData \%>\% rename(Conc_uM = Concentration_uM),
          conc_column = Conc_uM, model = "IndmaxSlope")$Graph
inductFit(IndData, model = "Slope")$Graph
inductFit(IndData, model = "Sig3Param")

inductFit(IndData, model = "IndmaxSlope", measurement = "activity")

MyFit <- inductFit(IndData, model = "all")
MyFit$Graph; MyFit$Fit

MyFit <- inductFit(IndData, model = "Sig3Param", fitByDonor = TRUE, donor = DonorID)
MyFit$Fit; MyFit$Fit_means; MyFit$Graph

MyFit <- inductFit(IndData, model = "all", fitByDonor = TRUE, donor = DonorID)
MyFit$Fit; MyFit$Fit_means; MyFit$Graph



}
