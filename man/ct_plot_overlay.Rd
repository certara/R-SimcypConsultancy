% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ct_plot_overlay.R
\name{ct_plot_overlay}
\alias{ct_plot_overlay}
\title{Overlay multiple data sets onto a single concentration-time graph}
\usage{
ct_plot_overlay(
  sim_obs_dataframe,
  mean_type = "arithmetic",
  figure_type = "means only",
  linear_or_log = "semi-log",
  colorBy = File,
  color_labels = NA,
  color_set = "default",
  obs_transparency = NA,
  facet1_column,
  facet1_labels = NA,
  facet2_column,
  facet2_labels = NA,
  floating_facet_scale = FALSE,
  facet_spacing = NA,
  time_range = NA,
  x_axis_interval = NA,
  pad_x_axis = TRUE,
  pad_y_axis = TRUE,
  y_axis_limits_lin = NA,
  y_axis_limits_log = NA,
  legend_position = NA,
  save_graph = NA,
  fig_height = 6,
  fig_width = 5,
  include_messages = TRUE
)
}
\arguments{
\item{sim_obs_dataframe}{the data.frame with multiple sets of
concentration-time data. At the moment, this function does not plot
observed data; that's still under construction.}

\item{mean_type}{plot "arithmetic" (default) or "geometric" mean
concentrations or "median" concentrations as the main (thickest or only)
line for each data set. If this aggregate measure is not available in the
simulator output, we'll warn you that we're plotting a different one.}

\item{figure_type}{the type of figure to plot. Default is "means only" to
show only the mean, geometric mean, or median (whatever you chose for
"mean_type"). Other option: "percentile ribbon" to show an opaque line for
the mean data and transparent shading for the 5th to 95th percentiles.
Note: You may sometimes see some artifacts -- especially for semi-log plots
-- where the ribbon gets partly cut off. For arcane reasons we don't want
to bore you with here, we can't easily prevent this. However, a possible
fix is to set your y axis limits for the semi-log plot to be wider.}

\item{linear_or_log}{the type of graph to be returned. Options: "semi-log",
"linear", "both vertical" (default, graphs are stacked vertically), or
"both horizontal" (graphs are side by side).}

\item{colorBy}{What column in \code{sim_obs_dataframe} should be used for
coloring the lines and/or points on the graph? This should be unquoted,
e.g., \code{colorBy = Tissue}.}

\item{color_labels}{Optionally specify a character vector for how you'd like
the labels for whatever you choose for \code{colorBy} to show up in the
legend. For example, use \code{c("file 1.xlsx" = "fa 0.5", "file 2.xlsx" =
"fa 0.2")} to indicate that "file 1.xlsx" is for when you were simulating
an fa of 0.5 and "file 2.xlsx" was for an fa of 0.2. The order in the
legend will match the order here.}

\item{color_set}{the set of colors to use. Options: \describe{

  \item{"default"}{colors selected from the color brewer palette "set 1"}

  \item{"ggplot2 default"}{the default set of colors used in ggplot2 graphs
  (ggplot2 is an R package for graphing.)}

  \item{"rainbow"}{colors selected from a rainbow palette. The default
  palette is limited to something like 6 colors, so if you have more than
  that, that's when this palette is most useful. It's \emph{not} very useful
  when you only need a couple of colors.}

  \item{"blue-green"}{a set of blues and greens}

  \item{"Brewer set 2"}{a set of colors from Cynthia Brewer et al. from Penn
  State that are friendly to those with red-green colorblindness}

  \item{"Tableau"}{uses the standard Tableau palette; requires the "ggthemes"
  package}}}

\item{obs_transparency}{Optionally make the observed data points
semi-transparent, which can be helpful when there are numerous
observations. Acceptable values are 0 (completely transparent) to 1
(completely opaque).}

\item{facet1_column}{If you would like to break up your graph into small
multiples, you can break the graphs up by up to two columns in
\code{sim_obs_dataframe}. What should be the 1st column to break up the
data by? This should be unquoted. If \code{floating_facet_scale} is FALSE,
then \code{facet1_column} will make the rows of the output graphs.}

\item{facet2_column}{What should be the 2nd column to break up the data into
small multiples by? This should be unquoted. If \code{floating_facet_scale}
is FALSE, then \code{facet2_column} will make the columns of the output
graphs.}

\item{floating_facet_scale}{TRUE or FALSE for whether to allow the axes for
each facet of a multi-facetted graph to scale freely according to what data
are present. Default is FALSE, which means that all data will be on the
same scale for easy comparison. However, this could mean that some graphs
have lines that are hard to see, so you can set this to TRUE to allow the
axes to shrink or expand according to what data are present for that facet.
Floating axes comes with a trade-off for the looks of the graphs, though:
Setting this to TRUE does mean that your x axis won't have pretty breaks
that are sensible for times in hours and that your y axis won't have minor
ticks.}

\item{facet_spacing}{Optionally set the spacing between facets. If left as
NA, a reasonable amount of space will be used. Units are "lines", so try,
e.g. 2.}

\item{time_range}{time range to show relative to the start of the simulation.
  A note on how this differs from \code{\link{ct_plot}}: Since this function
  does allow for multiple files to be plotted, please note that you cannot
  specify a dose number for the time range as you can with \code{ct_plot};
  that's because we wouldn't know which simulation you wanted that dose
  number for. Options that will work here: \describe{

  \item{NA}{entire time range of data}

  \item{a start time and end time in hours}{only data in that time range,
  e.g. \code{c(24, 48)}}}}

\item{x_axis_interval}{Set the x-axis major tick-mark interval. Acceptable
input: any number or leave as NA to accept default values.}

\item{pad_x_axis}{Optionally add a smidge of padding to the the x axis
(default is TRUE, which includes some generally reasonable padding). If
changed to FALSE, the y axis will be placed right at the beginning of your
time range and all data will end \emph{exactly} at the end of the time
range specified. If you want a \emph{specific} amount of x-axis padding,
set this to a number; the default is \code{c(0.02, 0.04)}, which adds 2\%
more space to the left side and 4\% more to the right side of the x axis.
If you only specify one number, we'll assume that's the percent you want
added to the left side.}

\item{pad_y_axis}{Optionally add a smidge of padding to the y axis (default
is TRUE, which includes some generally reasonable padding). As with
\code{pad_x_axis}, if changed to FALSE, the x axis will be placed right at
the bottom of your data, possible cutting a point in half. If you want a
\emph{specific} amount of y-axis padding, set this to a number; the default
is \code{c(0.02, 0)}, which adds 2\% more space to the bottom and nothing
to the top of the y axis. If you only specify one number, we'll assume
that's the percent you want added to the bottom.}

\item{y_axis_limits_lin}{Optionally set the Y axis limits for the linear
plot, e.g., \code{c(10, 1000)}. If left as NA, the Y axis limits for the
linear plot will be automatically selected.}

\item{y_axis_limits_log}{Optionally set the Y axis limits for the semi-log
plot, e.g., \code{c(10, 1000)}. Values will be rounded down and up,
respectively, to the nearest order of magnitude. If left as NA, the Y axis
limits for the semi-log plot will be automatically selected.}

\item{legend_position}{Specify where you want the legend to be. Options are
"left", "right" (default in most scenarios), "bottom", "top", or "none" if
you don't want one at all.}

\item{save_graph}{optionally save the output graph by supplying a file name
in quotes here, e.g., "My conc time graph.png". If you leave off ".png", it
will be saved as a png file, but if you specify a different file extension,
it will be saved as that file format. Acceptable extensions are "eps",
"ps", "jpeg", "jpg", "tiff", "png", "bmp", or "svg". Leaving this as NA
means the file will not be automatically saved to disk.}

\item{fig_height}{figure height in inches; default is 6}

\item{fig_width}{figure width in inches; default is 5}

\item{facet_label1}{UNDER CONSTRUCTION. Doesn't work yet.}

\item{facet_label2}{UNDER CONSTRUCTION. Doesn't work yet.}
}
\value{

}
\description{
\code{ct_plot_overlay} is meant to be used in conjunction with
\code{\link{extractConcTime_mult}} to create single graphs with overlaid
concentration-time data of multiple tissues, compounds, or Simcyp Simulator
output files for easy comparisons. \emph{Note:} There are some nuances to
overlaying observed data. Please see the "Details" section at the bottom of
this help file. Also, this hasn't really been developed or tested with
enzyme-abundance data or ADAM data yet.
}
\details{
\strong{Notes on including observed data:} We recently added the option of
including observed data and are in the process of testing this. To include
observed data, you have two options: \enumerate{

\item{Use the Simulator Excel PE data entry template to save information
about your observed data. Then, when you run
\code{\link{extractConcTime_mult}}, supply the names of those Excel files to
the observed data  function argument. This is the BEST option because it
contains the most information about the observed data.}

\item{Include observed data in your simulation files. Those data will be
automatically extracted when you run \code{\link{extractConcTime_mult}} if
"obs_data_files" is left as the default NA. } }

The \code{ct_plot_overlay} function will automatically figure out which
observed data should be compared with which simulated compound IDs, tissues,
etc. However, because the function doesn't know which simulator \emph{file}
goes with which observed data, it will assume that \emph{all} the observed
data are appropriate to compare to \emph{all} the files included in
\code{sim_obs_dataframe} by default. If that's not the case, after you use
\code{\link{extractConcTime_mult}} to extract your data, you can indicate
which simulator output file goes with which observed file by setting the
simulator output file in the column "File". (Please ask a member of the R
Working Group for help if you're not clear on how to do this.) Be warned,
though, that if you assign "File" for some observed data but not all, only
the observed data with an assignment for "File" will show up on the graph.

One other note: The observed data files don't include the \emph{name} of the
compound you're simulating (column: "Compound"). They do include whether it
was a substrate, metabolite, or inhibitor (column: CompoundID), but not the
compound's actual name. For that reason, try coloring or facetting your data
by CompoundID rather than by Compound. Similarly, if you have an inhibitor
and you have observed data, the inhibitor will be listed as the generic
"inhibitor" here rather than, e.g., "ketoconazole" because the observed data
file doesn't indicate that.
}
\examples{

ct_plot_overlay(sim_obs_dataframe = ConcTime, colorBy = File,
                facet1_column = Compound,
                facet2_column = Tissue)


}
