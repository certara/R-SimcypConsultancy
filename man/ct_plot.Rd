% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ct_plot.R
\name{ct_plot}
\alias{ct_plot}
\title{Concentration-time plots to match Consultancy template}
\usage{
ct_plot(
  sim_data_file = NA,
  obs_data_file = NA,
  obs_effector_data_file = NA,
  sim_obs_dataframe = NA,
  tissue = "plasma",
  compoundToExtract = "substrate",
  figure_type = "trial means",
  time_range = NA,
  x_axis_interval = NA,
  pad_x_axis = FALSE,
  adjust_obs_time = FALSE,
  t0 = "simulation start",
  yaxis_limits_log = NA,
  obs_data_option = NA,
  obs_color = NA,
  obs_shape = NA,
  line_type = NA,
  line_transparency = NA,
  include_legend = FALSE,
  legend_label = NA,
  return_data = FALSE,
  return_indiv_graphs = FALSE
)
}
\arguments{
\item{sim_data_file}{name of the Excel file containing the simulated
concentration-time data}

\item{obs_data_file}{name of the Excel file containing the observed
concentration-time data. If the observed data you want to plot were already
included in the Excel output from the simulator, leave this as NA.
Otherwise, this is the file that it is ready to be converted to an XML
file, not the file that contains only the digitized time and concentration
data.}

\item{obs_effector_data_file}{name of the Excel file containing the observed
concentration-time data in the presence of an effector. This is the file
that is ready to be converted to an XML file.}

\item{sim_obs_dataframe}{If you have already extracted the concentration-time
data using the function \code{\link{extractConcTime}}, you can enter the
name of the output data.frame from that function instead of re-reading the
Excel file.}

\item{tissue}{the tissue to plot. Default is plasma for typical plasma
concentration-time data. Other tissues are acceptable, e.g., "lung",
"brain", etc., as long as the tissue is one of the options included in
"Sheet Options", "Tissues" in the simulator.}

\item{compoundToExtract}{For which compound do you want to extract
concentration-time data? Options are "substrate" (default), "metabolite 1",
"metabolite 2", or "effector" (this can be either an inducer or inhibitor;
this is labeled as "inhibitor 1" in the simulator).}

\item{figure_type}{type of figure to plot. Options are:

  \describe{

  \item{trial means}{plots a black line for the mean data, gray lines for the
  mean of each trial of simulated data, and open circles for the observed
  data. If an effector was present, gray dashed lines indicate the mean of
  each trial of simulated data in the presence of the effector.}

  \item{percentiles}{plots a black line for the mean data, gray lines for the
  5th and 95th percentiles of the simulated data, and open circles for the
  observed data}

  \item{means only}{plots a black line for the mean data and, if an effector
  was modeled, a dashed line for the concentration-time data with the the
  effector.}

  \item{Freddy}{Freddy's favorite style of plot with trial means in light
  gray, the overall mean in thicker black, the 5th and 95th percentiles in
  dashed lines, and the observed data in semi-transparent purple-blue. Graphs
  with an effector present lose the trial means, and the percentiles switch
  to solid, gray lines. While this does not align with the officially
  sanctioned template at this time, this looks \emph{sharp}, makes it easy to
  see the defining characteristics of the data, and I recommend checking it
  out. If the color is too much for you but you like the rest, try setting
  \code{obs_color = "none"}. -LS}}}

\item{time_range}{time range to show relative to the start of the simulation.
  Options: \describe{

  \item{NA}{entire time range of data}

  \item{a start time and end time in hours}{only data in that time range,
  e.g. \code{c(24, 48)}}

  \item{"first dose"}{only the time range of the first dose}

  \item{"last dose"}{only the time range of the last dose}

  \item{"penultimate dose"}{only the time range of the 2nd-to-last dose,
  which can be useful for BID data where the end of the simulation extended
  past the dosing interval or data when the substrate was dosed BID and the
  effector was dosed QD} }}

\item{x_axis_interval}{Set the x-axis major tick-mark interval. Acceptable
input: any number or leave as NA to accept default values.}

\item{pad_x_axis}{Optionally add a smidge of padding to the left side of the
x axis. If left as FALSE, the y axis will be placed right at the beginning
of your time range. If set to TRUE, there will be a little bit of space
between the y axis and the start of your time range. NOTE: We could allow
users to specify exactly how much padding and on which sides of the x axis
if there's interest from users. -LS}

\item{adjust_obs_time}{TRUE or FALSE: Adjust the time listed in the observed
data file to match the last dose administered? This only applies to
multiple-dosing regimens. If TRUE, the graph will show the observed data
overlaid with the simulated data such that the dose in the observed data
was administered at the same time as the last dose in the simulated data.
If FALSE, the observed data will start at whatever times are listed in the
Excel file.}

\item{t0}{What event should be used for time zero? Options are: "simulation
start" (default), "substrate dose 1", "effector dose 1", "substrate last
dose", "effector last dose", "substrate penultimate dose", or "effector
penultimate dose". \emph{This does not change which data are included in
the graph;} instead, this determines whether the x axis numbers are offset
so that, e.g., the last dose is administered at time 0.}

\item{yaxis_limits_log}{Optionally set the Y axis limits for the semi-log
plot, e.g., \code{c(10, 1000)}. Values will be rounded down and up,
respectively, to the nearest order of magnitude. If left as NA, the Y axis
limits for the semi-log plot will be automatically selected.}

\item{obs_data_option}{Set options for how to view observed data. Options
  are:

  \describe{

  \item{"mean only"}{show only a single point at the arithmetic mean value
  for each time point}

  \item{"geometric mean only"}{show a single point at the geometric mean}

  \item{"all"}{show all the individual data (equivalently, leave
  \code{obs_data_option} as NA)}

  \item{"mean bars"}{show a point at the arithmetic mean for each time point
  and error bars for the arithmetic standard deviation}}}

\item{obs_color}{If you would like the observed data points to be in color,
either list a specific color or set this to "default". Points will be
displayed in semi-transparent blue-purple for default and the
semi-transparent version of whatever other color you list otherwise.
Setting this to "none" will also make sure that the color is transparent.}

\item{obs_shape}{Optionally specify what shapes are used to depict observed
data for 1. the substrate drug alone and 2. the substrate drug in the
presence of an effector. Input should look like this, for example:
\code{c(1, 2)} to get an open circle and an open triangle. To see all the
possible shapes and what number corresponds to which shape, see
\url{https://r-graphics.org/recipe-scatter-shapes} (there's a graph around
the middle of that page). If left as NA, substrate alone will be an open
circle and substrate + effector will be an open triangle.}

\item{line_type}{Optionally specify what types of lines are used to depict 1.
the substrate drug alone and 2. the substrate drug in the presence of an
effector (when applicable). Input should look like this, for example:
\code{c("solid", "dashed")} to get a solid line for the substrate drug and
a dashed line for the effector. To see all possible line types:
\code{ggpubr::show_line_types()}. If left as NA, substrate alone will be a
solid line and substrate + effector will be a dashed line. If the graph
type is "Freddy" and there's no effector present, which is a slightly
different scenario than the other graph types, the 1st line type specified
will be for the mean simulated concentration and the trial means, and the
2nd line type specified will be for the 5th and 95th percentiles.}

\item{line_transparency}{Optionally specify the transparency for the trial
mean or percentile lines. Acceptable values are from 0 (fully transparent,
so no line at all) to 1 (completely opaque or black). If left as NA, this
value will be automatically determined.}

\item{legend_label}{Optionally indicate on the legend whether the effector is
an inhibitor or an inducer. Input will be used as the label in the legend
for the line style and the shape. If left as NA when a legend is included
and an effector is present, the label in the legend will be "effector".}

\item{return_data}{TRUE or FALSE: Return the data used in the graphs? If
TRUE, this will return a named list of: \describe{ \item{Graphs}{the set of
graphs} \item{Data}{a data.frame of the concentration-time data used in the
set of graphs} }}

\item{return_indiv_graphs}{TRUE or FALSE: Return each of the two individual
graphs? This can be useful if you want to modify the graphs further or only
use one, etc.}
}
\value{
Depending on the options selected, returns either a set of graphs or
  a named list of the set of the two graphs together ("Graphs" in the
  output), the individual graphs ("Linear graph" and "Semi-log graph"),
  and/or the data used for creating the graphs ("Data").
}
\description{
Using observed and simulated concentration-time data, make
publication-quality graphs that match the consultancy template formatting
instructions. We've tried to include a fair number of options here for
flexibility, but many of the function arguments are optional; most of the
time, you'll get decent-looking graphs while only setting a minimal number of
arguments.
}
\examples{
sim_data_file <- "../Example simulator output.xlsx"
obs_data_file <- "../fig1-242-06-001-MD - for XML conversion.xlsx"

ct_plot(sim_data_file)
ct_plot(sim_data_file, figure_type = "percentiles")
ct_plot(sim_data_file, return_data = TRUE)
ct_plot(sim_data_file, return_indiv_graphs = TRUE)

# Here's where adjusting or not adjusting the observed data time comes
# into play:
ct_plot(sim_data_file = "../Example simulator output MD.xlsx",
        obs_data_file = "../fig1-242-06-001-MD - for XML conversion.xlsx")
ct_plot(sim_data_file = "../Example simulator output MD.xlsx",
        obs_data_file = "../fig1-242-06-001-SD - for XML conversion.xlsx",
        adjust_obs_time = FALSE)

# Perhaps you don't want to show *all* the data but instead want to
# limit the time interval that is graphed. Use \code{time_range} here:
ct_plot(sim_data_file = "../Example simulator output MD.xlsx",
        obs_data_file = "../fig1-242-06-001-SD - for XML conversion.xlsx",
        adjust_obs_time = FALSE, time_range = c(0, 24))

# Or you can let it automatically calculate the time frame for the first or
# last dose simulated
ct_plot(sim_data_file = "../Example simulator output MD.xlsx",
        obs_data_file = "../fig1-242-06-001-SD - for XML conversion.xlsx",
        time_range = "first dose")
ct_plot(sim_data_file = "../Example simulator output MD.xlsx",
        obs_data_file = "../fig1-242-06-001-MD - for XML conversion.xlsx",
        time_range = "last dose")

# These may be too busy when you've got an effector present:
ct_plot(sim_data_file = "../Example simulator output MD + inhibitor.xlsx")
ct_plot(sim_data_file = "../Example simulator output MD + inhibitor.xlsx",
        figure_type = "trial percentiles")
# so you may want to consider only plotting means as an alternative:
ct_plot(sim_data_file = "../Example simulator output MD + inhibitor.xlsx",
        figure_type = "means only")

# You can also add a separate observed concentration-time file for the
# compound with the effector present. The graph will show those points
# as open triangles.
ct_plot(sim_data_file = "../Example simulator output MD.xlsx",
        obs_data_file = "../fig1-242-06-001-SD - for XML conversion.xlsx",
        obs_effector_data_file = "../Mallikaarjun_2016_RTV-fig1-100mg-BID-DLM+Kaletra - for XML conversion.xlsx",
        time_range = "last dose")

# If you've already got a data.frame formatted like the output
# from extractConcTime...
data(ConcTime)
ct_plot(sim_obs_dataframe = ConcTime)

# Add some further options for the look of your graph -- especially useful
# if the default settings are clipping your data.
ct_plot(sim_data_file = "../Example simulator output - MDZ + metabolites + inhibitor.xlsx",
        obs_data_option = "mean bars",
        obs_color = "red",
        yaxis_limits_log = c(1e-05, 0.1),
        pad_x_axis = TRUE,
        include_legend = TRUE,
        legend_label = "Inhibitor")
}
