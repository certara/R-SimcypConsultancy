% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractExpDetails_mult.R
\name{extractExpDetails_mult}
\alias{extractExpDetails_mult}
\title{Extract experimental details for multiple files}
\usage{
extractExpDetails_mult(
  sim_data_files = NA,
  exp_details = "all",
  existing_exp_details = Deets,
  overwrite = FALSE,
  save_output = NA
)
}
\arguments{
\item{sim_data_files}{a character vector of simulator output files or NA to
extract experimental details for all the Excel files in the current folder.
Example of acceptable input: \code{c("sim1.xlsx", "sim2.xlsx")}. Note that,
if some of your Excel files are not regular simulator output, e.g. they are
sensitivity analyses or a file where you were doing some calculations, this
will result in an error and return no data. You'll also get an error and no
data if any of these output files are open in another program.}

\item{exp_details}{Experimental details you want to extract from the
  simulator output files using the function \code{\link{extractExpDetails}}.
  Options are \describe{

  \item{"Summary tab"}{Extracts details only from the "Summary tab"
  (default)}

  \item{"Input Sheet"}{Extracts details only from the "Input Sheet" tab}

  \item{"population tab"}{Extracts details about the population used (data
  are pulled from the tab with the same name as the population simulated)}

  \item{"Simcyp inputs"}{Extracts all the details that you normally fill out
  on the "Simcyp inputs (and QC)" tab of a compound data sheet}

  \item{"all"}{Extracts all possible parameters (default). This is the
  slowest option in terms of processing time because it must read multiple
  Excel tabs.}

  \item{a string of the specific parameters you want}{For a complete list,
  type \code{data(AllExpDetails)} into the console. Parameters are reported
  with a suffix depending on which compound they pertain to: "_sub" for the
  substrate, "_met1" for the primary metabolite, "_met2" for the second
  primary metabolite, "_secmet" for the secondary metabolite, "_inhib" for
  the 1st inhibitor or inducer listed, "_inhib2" for the 2nd inhibitor or
  inducer listed, or "_inh1met" for the inhibitor 1 metabolite. An example of
  acceptable input: \code{c("pKa1_sub", "fa_inhib2", "Regimen_sub")}}}}

\item{existing_exp_details}{(optional) a data.frame that contains previously
extracted experimental details. This should NOT be in quotes. Because we
can see scenarios where you might want to extract some experimental details
and then run more simulations for comparisons, this function will
\emph{add} data to that data.frame. It will \emph{not} overwrite existing
data unless \code{overwrite} is set to TRUE.}

\item{overwrite}{TRUE or FALSE on whether to re-extract the experimental
details from output files that are already included in
\code{existing_exp_details}. Since pulling data from Excel files is slow,
by default, this will \emph{not} overwrite existing data and instead will
only add data from any Excel files that aren't already included. A
situation where you might want to set this to TRUE would be when you have
changed input parameters for simulations and re-run them OR when you have
extracted only some of the possible experimental details and you now would
like more experimental details from each simulator output file.}

\item{save_output}{optionally save the output by supplying a file name in
quotes here, e.g., "My experimental details.csv". If you leave off ".csv",
it will still be saved as a csv file.}
}
\value{
Returns a data.frame of experimental details for simulator files
}
\description{
\code{extractExpDetails_mult} takes a character vector of simulator output
files -- or all the Excel files in the current directory if no files are
specified -- and collects experimental details for the simulations into a
single table. It optionally saves that table to a csv or Excel file.
}
\examples{

extractExpDetails_mult(
    sim_data_files =
        c("Example simulator output - SD MDZ + MD RTV.xlsx",
          "Example simulator output - MDZ + metabolites.xlsx",
          "Example simulator output - met1 met2 sec met1 inhib1.xlsx",
          "Example simulator output - met1 met2 sec met1.xlsx"),
    exp_details = "all",
    save_output = "My experimental details.csv")
 
}
