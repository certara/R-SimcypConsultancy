% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_simulation_directory.R
\name{make_simulation_directory}
\alias{make_simulation_directory}
\title{Make a directory of simulations indicating which simulation file is located
in which folder}
\usage{
make_simulation_directory(
  project_folder = NA,
  sim_data_files = NA,
  existing_exp_details = NA,
  save_table = NA
)
}
\arguments{
\item{project_folder}{location of the project folder to search. Please note
that R requires forward slashes ("/") in file paths rather than the back
slashes Microsoft uses. If left as NA (default), we'll assume your current
working directory is the top level of your project folders. This function
\emph{only} searches for simulation files in the project folder and any
subfolders.}

\item{sim_data_files}{which files to include in the directory of simulations.
  Options are:
  \describe{\item{NA}{all .xlsx, .db, or .wksz files in the current folder}

  \item{"recursive"}{all .xlsx, .db, or .wksz files in the current folder and any
  subfolders}

  \item{"use existing_exp_details"}{use the files included in whatever you
  supplied for \code{existing_exp_details}. This will fine those files, even
  if they're in subfolders, as long as they're somewhere in the project
  folder}

  \item{a single text string such as "abc"}{include any files in the current
  folder or any folders below it that have that specific text}

  \item{a character vector of specific file names, e.g., \code{sim_data_files =
  c("abc.xlsx", "def.xlsx")}}{only include the files listed. We'll figure
  out which subfolder they're in.}}}

\item{existing_exp_details}{optionally supply the output from running
\code{\link{extractExpDetails_mult}} to get only the simulation files
included there in your simulation directory}

\item{save_table}{optionally specify either an Excel or csv file name for
saving your simulation directory}
}
\value{
a data.frame of simulation files and their respective file paths
}
\description{
\code{make_simulation_directory} will create a data.frame of
  simulations in a given project folder, the associated XML files when
  applicable (you'll have to provide that information with the argument
  \code{existing_exp_details}), and, optionally, save that data.frame to an
  Excel file. It will also check whether the file names comply with USFDA and
  Consultancy Team standards and check whether the same simulation is saved
  in more than one place.

  This is wicked fast.
}
\examples{
# none yet

}
