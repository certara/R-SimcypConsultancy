% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forest_plot.R
\name{forest_plot}
\alias{forest_plot}
\title{Create a forest plot}
\usage{
forest_plot(
  forest_dataframe,
  perp_or_victim,
  PKparameters = NA,
  y_order_column = File,
  y_order = NA,
  y_order_secondary_column,
  y_order_secondary = NA,
  x_axis_limits = NA,
  x_axis_label = NA,
  facet_column_x,
  dose_units = "mg",
  prettify_compound_names = TRUE,
  legend_position = "none",
  save_graph = NA,
  fig_height = 6,
  fig_width = 5
)
}
\arguments{
\item{forest_dataframe}{a data.frame with extracted forest-plot data,
generated from running \code{\link{extractForestData}} on Simulator output
files or a csv file with the same data. If this is a forest plot of
perpetrator DDIs, the column "Substrate" will be what is used to label the
y axis. If it is a forest plot of victim DDIs, it will be the column
"Inhibitor1". If, instead of the compound or inhibitor 1 names, you would
like some other label to appear on the y axis, please see the argument
\code{y_axis_labels}.}

\item{perp_or_victim}{specify whether the drug of interest is a "victim" or
"perpetrator". This will determine whether the graphs will be labeled on
the y axis by the substrate name (for perpetrator forest plots) or by the
effector name (for victim forest plots).}

\item{PKparameters}{optionally specify which PK parameters included in
\code{forest_dataframe} to use as input. If left as NA, all the PK
parameters you extracted with \code{\link{extractForestData}} will be
included. If you try to include a parameter that's not already present in
forest_dataframe, it will be ignored. Enclose the parameters with
\code{c(...)}.}

\item{y_order_column}{the column by which you would like to break up the y
axis, e.g., \code{y_order_column = File} (default). You must specify
something here; it cannot be left blank. If you use File as the column to
break up the data, this will assume that what you want to show on the y
axis is the substrate if the drug of interest is a perpetrator or the
inhibitor if it's a victim.}

\item{y_order}{optionally supply a character vector to specify the order of
the items on the y axis. If you'd like to change the name of the item as on
the y axis -- for example, change your file names to something more
readable than things like "abc-25mg-qd.xlsx" -- you can do that here with a
named character vector like this: \code{y_order = c("abc1a-mdz.xlsx" =
"Midazolam with in vitro induction", "abc1a-mdz-10x.xlsx" = "Midazolam with
10-fold higher Indmax")} If \code{y_order} is left as NA, the y axis will
be sorted according to the geometric mean AUC ratio with inhibitors on top
and inducers on the bottom. Please see the example section at the bottom of
this help file for more examples.}

\item{y_order_secondary_column}{optionally break up the graphs along the y
axis by an additional column. For example, say your drug of interest is a
perpetrator and you've administered each of the substrates on different
days. Here's how you could approach that: \enumerate{\item{Make a column
"DoseDay" in your data.frame that specifies which day the substrate was
administered. Let's say you have values in that column of "Day 1", "Day 5",
and "Day 14".} \item{Set \code{y_order_column = DoseDay}} \item{Set the
order of the dose days: \code{y_order = c("Day 1", "Day 5", "Day 14")}.
Please note that these must perfectly match the actual values in that
DoseDay column.} \item{Set \code{y_order_secondary_column = Substrate}}
\item{Last, set \code{y_order_secondary = c("buprenorphine", "repaglinide",
"midazolam")}, where those are the substrates simulated in the order you
want.}} This will break up the graphs first by the dose day and next by the
substrate and do so in the order you specified.}

\item{x_axis_limits}{the x axis limits to use; default is 0.06 to 12.}

\item{x_axis_label}{optionally supply a character vector or an expression to
use for the x axis label}

\item{facet_column_x}{optionally break up the graph horizontally into small
multiples. The designated column name should be unquoted, e.g.,
\code{facet_column_x = Dose_sub}}

\item{dose_units}{the units used in dosing. If you set \code{facet_column_x},
\code{y_order_column}, or \code{y_order_secondary_column} to Dose_sub or
Dose_inhib, setting the dose units here will automatically add those units
to the appropriate graph labels. This way, the graph label will be, e.g.,
"50 mg" and "100 mg" instead of just "50" and "100". This just helps make
it clearer what the numbers represent. If you specify anything other than
Dose_sub or Dose_inhib for \code{facet_column_x}, \code{y_order_column}, or
\code{y_order_secondary_column}, this will be ignored.}

\item{prettify_compound_names}{TRUE (default) or FALSE on whether to make
compound names prettier. This was designed for simulations where the
substrates or effectors are among the standard options for the simulator,
and leaving \code{prettify_compound_names = TRUE} will make the name of
those compounds something more human readable. For example,
"SV-Rifampicin-MD" will become "rifampicin", and "Sim-Midazolam" will
become "midazolam".}

\item{legend_position}{specify where you want the legend to be. Options are
"left", "right", "bottom", "top", or "none" (default) if you don't want one
at all. \emph{Note:} We're still working on the legend position when
there's something specified for \code{y_order_secondary_column}; choosing
that option requires us to lay out the graphs differently, and when we do
that, the legend position doesn't work well for anything other than "none"
or "right".}

\item{save_graph}{optionally save the output graph by supplying a file name
in quotes here, e.g., "My conc time graph.png" or "My conc time
graph.docx". If you leave off ".png" or ".docx" from the file name, it will
be saved as a png file, but if you specify a different graphical file
extension, it will be saved as that file format. Acceptable graphical file
extensions are "eps", "ps", "jpeg", "jpg", "tiff", "png", "bmp", or "svg".
Leaving this as NA means the file will not be saved to disk.
\strong{WARNING:} SAVING TO WORD DOES NOT WORK ON SHAREPOINT. This is a
Microsoft permissions issue, not an R issue. If you try to save on
SharePoint, you will get a warning that R will save your file instead to
your Documents folder.}

\item{fig_height}{figure height in inches; default is 6}

\item{fig_width}{figure width in inches; default is 5}
}
\value{
Output is a graph.
}
\description{
\code{forest_plot} creates forest plots of AUC and Cmax ratios. Please use
the function \code{\link{extractForestData}} to generate the input data for
\code{forest_dataframe}. The data will be broken up by the file name on the y
axis and, optionally, whatever you specify for \code{facet_column_x} in the
horizontal direction. WARNING: This is a relatively new function and should
be rigorously QC'ed.
}
\examples{

# We'll use some example forest-plot data for the substrate bufuralol
# with various effectors. To start, we'll just look at one dose level.
Buf_lowdose <- ForestData \%>\% filter(Dose_sub == 20)
forest_plot(forest_dataframe = Buf_lowdose,
            perp_or_victim = "victim",
            x_axis_limits = c(0.9, 5))

# If there were multiple dosing levels of your drug, though, it might be
# nice to break up the graph by the substrate dose like this:
forest_plot(forest_dataframe = ForestData,
            perp_or_victim = "victim",
            facet_column_x = Dose_sub,
            x_axis_limits = c(0.9, 5))

# Maybe you want just one longer graph  with all the low-dose simulations
# on the top and the high-dose simulations on the bottom. Here's one
# way to do that: 
}
